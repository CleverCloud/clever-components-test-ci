name: publish-npm
on:
  push:
    tags:
      - '[0-9]+\.[0-9]+\.[0-9]+'
      - '[0-9]+\.[0-9]+\.[0-9]+-alpha\.[0-9]+'
      - '[0-9]+\.[0-9]+\.[0-9]+-beta\.[0-9]+'
      - '[0-9]+\.[0-9]+\.[0-9]+-rc\.[0-9]+'
jobs:
  pre-publish:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version_parse.outputs.version }}
      prerelease: ${{ steps.version_parse.outputs.prerelease }}
      skip: ${{ steps.version_parse.outputs.skip }}
    steps:
      - name: Decode version from tag
        id: version_regex
        uses: KyoriPowered/action-regex-match@v3
        with:
          text: ${{ github.ref_name }}
          regex: '^(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)(?:-([a-zA-Z]+)\.(?:0|[1-9]\d*))?$'
      - name: Parse version
        id: version_parse
        if: steps.version_regex.outputs.match != ''
        shell: bash
        run: |
          TAG="latest"
          if [[ "${{ steps.version_regex.outputs.group1 }}" != "" ]]; then
            TAG="${{ steps.version_regex.outputs.group1 }}"
          fi
          echo "prerelease=$TAG" >> $GITHUB_OUTPUT
          echo "version=${{ steps.version_regex.outputs.match != '' }}" >> $GITHUB_OUTPUT
          echo "skip=false" >> $GITHUB_OUTPUT
  publish-npm:
    needs: pre-publish
    if: needs.pre-publish.outputs.skip == 'false'
    runs-on: ubuntu-latest
    steps:
      - name: NPM - Publish version ${{ github.ref_name }} with tag ${{ needs.extract-npm-tag.outputs.npm_tag }}
        run: echo "[NPM] Publish version ${{ github.ref_name }} with tag ${{ needs.extract-npm-tag.outputs.npm_tag }}"
  publish-cdn:
    needs: pre-publish
    if: needs.pre-publish.outputs.skip == 'false'
    runs-on: ubuntu-latest
    steps:
      - name: CDN - Publish version ${{ github.ref_name }}
        run: echo "[CDN] Publish version ${{ github.ref_name }}"
