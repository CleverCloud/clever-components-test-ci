name: publish
on:
  push:
    tags:
      - '[0-9]+\.[0-9]+\.[0-9]+'
      - '[0-9]+\.[0-9]+\.[0-9]+-beta\.[0-9]+'
jobs:
  pre-publish:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version_parse.outputs.version }}
      prerelease: ${{ steps.version_parse.outputs.prerelease }}
      release-needed: ${{ steps.version_parse.outputs.release-needed }}
    steps:
      - name: Decode version from tag
        id: version_regex
        uses: KyoriPowered/action-regex-match@v3
        with:
          text: ${{ github.ref_name }}
          regex: '^(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)(?:-(beta)\.(?:0|[1-9]\d*))?$'
      - name: Parse version
        id: version_parse
        if: steps.version_regex.outputs.match != ''
        shell: bash
        run: |
          echo "prerelease=${{ steps.version_regex.outputs.group1 }}" >> $GITHUB_OUTPUT
          echo "version=${{ steps.version_regex.outputs.match != '' }}" >> $GITHUB_OUTPUT
          echo "release-needed=true" >> $GITHUB_OUTPUT
  publish-npm:
    needs: pre-publish
    if: needs.pre-publish.outputs.release-needed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.ref_name }}

      - uses: volta-cli/action@v4

      - name: Extract NPM tag
        id: npm_tag
        run: p=${{ needs.pre-publish.outputs.prerelease }} && echo "tag=${p:-latest}" >> $GITHUB_OUTPUT

      - name: Install dependencies
        run: npm ci

      - name: Publish version ${{ github.ref_name }} with tag ${{ steps.npm_tag.outputs.tag }}
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm config set //registry.npmjs.org/:_authToken ${NPM_TOKEN}
          npm publish --tag ${{ steps.npm_tag.outputs.tag }}
  publish-cdn:
    needs: pre-publish
    if: needs.pre-publish.outputs.release-needed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.ref_name }}

      - uses: volta-cli/action@v4

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: |
          npm run components:build-cdn
          npm run components:build-cdn:versions-list

      - name: Publish version ${{ github.ref_name }}
        env:
          GIT_TAG_NAME: ${{ github.ref_name }}
          SMART_CDN_CELLAR_KEY_ID: ${{ secrets.SMART_CDN_CELLAR_KEY_ID }}
          SMART_CDN_CELLAR_SECRET_KEY: ${{ secrets.SMART_CDN_CELLAR_SECRET_KEY }}
        run: npm run components:publish-cdn
