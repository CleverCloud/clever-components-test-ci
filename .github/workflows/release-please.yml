on:
  push:
    branches:
      - main
      - 'fix/**'
name: release-please
jobs:
  release:
    name: release
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.release.outputs.tag_name }}
      release_created: ${{ steps.release.outputs.release_created }}
    steps:
      - name: Extract branch name
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: node
          include-v-in-tag: false
          default-branch: ${{ env.BRANCH_NAME }}
  publish-npm:
    needs: release
    if: needs.release.outputs.release_created == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ needs.release.outputs.version }}
      - uses: volta-cli/action@v4
      - name: Install dependencies
        run: npm ci
      - name: Publish version ${{ needs.release.outputs.version }}
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm config set //registry.npmjs.org/:_authToken ${NPM_TOKEN}
          npm publish --access public
  publish-cdn:
    needs: release
    if: needs.release.outputs.release_created == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ needs.release.outputs.version }}
      - uses: volta-cli/action@v4
      - name: Install dependencies
        run: npm ci
      - name: Build
        env:
          GIT_TAG_NAME: ${{ needs.release.outputs.version }}
        run: |
          npm run components:build-cdn
          npm run components:build-cdn:versions-list
      - name: Publish version ${{ needs.release.outputs.version }}
        env:
          GIT_TAG_NAME: ${{ needs.release.outputs.version }}
          SMART_CDN_CELLAR_KEY_ID: ${{ secrets.SMART_CDN_CELLAR_KEY_ID }}
          SMART_CDN_CELLAR_SECRET_KEY: ${{ secrets.SMART_CDN_CELLAR_SECRET_KEY }}
        run: npm run components:publish-cdn
